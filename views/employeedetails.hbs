<!DOCTYPE html>
<html lang="en">

<head>

</head>

<body>
    {{> header}}
    {{> navbar}}

    <div class="content-wrapper">
        <section class="content-header">
            <h1>Edit Employee</h1>
        </section>

        <section class="content">
            <div class="container-fluid">
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Employee List</h3>
                    </div>
                    <div class="card-body">
                        <table id="example1" class="table table-bordered table-striped dataTable dtr-inline" role="grid">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>Employee Code</th>
                                    <th>Employee Name</th>
                                    <th>Position</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {{#each display}}
                                    <tr>
                                        <td>{{this.id}}</td>
                                        <td>{{this.empCode}}</td>
                                        <td>{{this.fname}} {{this.lname}}</td>
                                        <td>{{this.employee_role}}</td>
                                        <td>
                                        <button class="btn btn-primary btn-xs" onclick="openEditModal({{this.id}})">
                                        <i class="fas fa-edit icon-size"></i> <!-- Edit icon -->
                                        </button>

                                        <a href="/empdelete/{{this.id}}" class="btn btn-danger btn-xs" onclick="return confirm('Are you sure you want to delete this employee?');">
                                            <i class="fas fa-trash icon-size"></i> <!-- Delete icon -->
                                        </a>
                                        </td>
                                    </tr>
                                {{/each}}
                            </tbody>
                        </table>
                    </div>
                </div>

    <!-- Edit Employee Modal -->
<div class="modal fade" id="editEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="editEmployeeModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editEmployeeModalLabel">Edit Employee</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editEmployeeForm" action="" method="POST" enctype="multipart/form-data">
                    <input type="hidden" name="emp_id" value="">
                    <div class="form-group">
                        <label for="empCode">Employee Code</label>
                        <input type="text" name="empCode" class="form-control" id="empCode" readonly>
                    </div>
                    <div class="form-group">
                        <label for="fname">First Name</label>
                        <input type="text" name="fname" class="form-control" id="fname" required>
                    </div>
                    <div class="form-group">
                        <label for="lname">Last Name</label>
                        <input type="text" name="lname" class="form-control" id="lname" required>
                    </div>
                    <div class="form-group">
                        <label for="fathername">Father Name</label>
                        <input type="text" name="fathername" class="form-control" id="fathername" required>
                    </div>
                    <div class="form-group">
                        <label for="mothername">Mother Name</label>
                        <input type="text" name="mothername" class="form-control" id="mothername" required>
                    </div>
                                                        <div class="form-group">
                                                            <label for="gender">Gender</label>
                                                            <select class="form-control" id="gender" name="gender" required>
                                                            <!-- Options will be populated by JavaScript -->
                                                            </select>
                                                        </div>
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" name="email" class="form-control" id="email" required>
                    </div>
                    <div class="form-group">
                        <label for="dob">Date of Birth</label>
                        <input type="date" name="dob" class="form-control" id="dob" required>
                    </div>
                    <div class="form-group">
                        <label for="doj">Date of Joining</label>
                        <input type="date" name="doj" class="form-control" id="doj" required>
                    </div>
                    <div class="form-group">
                        <label for="role_id">Role ID</label>
                        <input type="text" name="role_id" class="form-control" id="role_id" required>
                    </div>
                    <div class="form-group">
                                                            <label for="department">Department</label>
                                                            <select class="form-control" id="department" name="department" required>
                                                            <!-- Options will be populated by JavaScript -->
                                                            </select>
                                                        </div>
                    <div class="form-group">
                        <label for="password">Password</label>
                        <input type="password" name="password" class="form-control" id="password" required>
                    </div>
                    <div class="form-group">
                        <label for="status">Status</label>
                        <select name="status" class="form-control" id="status" required>
                            <option value="Active">Active</option>
                            <option value="Inactive">Inactive</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="photo">Photo</label>
                        <input type="file" name="photo" class="form-control" id="photoInput" accept="image/*">
                        <img id="imagePreview" src="" alt="Employee Photo" class="img-fluid" style="margin-top: 10px; display: none; width: 200px; height: 200px; border: 1px solid #ccc; border-radius: 5px;" />
                    </div>

                    <h5>Family Details</h5>
                    <div id="familyDetailsContainer">
                        <!-- Family member fields will be populated here -->
                    </div>
                    <button type="submit" class="btn btn-success float-right">Update Employee</button>
                </form>
            </div>
        </div>
    </div>
</div>
        </section>
    </div>
        {{> footer}}

<!-- jQuery -->
    <script src="../../plugins/jquery/jquery.min.js"></script>
    <!-- jQuery UI 1.11.4 -->
    <script src="../../plugins/jquery-ui/jquery-ui.min.js"></script>
    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
    <script>
        $.widget.bridge('uibutton', $.ui.button);
    </script>
    <!-- Bootstrap 4 -->
    <script src="../../plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- DataTables & Plugins -->
    <script src="../../plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="../../plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="../../plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="../../plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="../../plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="../../plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="../../plugins/jszip/jszip.min.js"></script>
    <script src="../../plugins/pdfmake/pdfmake.min.js"></script>
    <script src="../../plugins/pdfmake/vfs_fonts.js"></script>
    <script src="../../plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="../../plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="../../plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
    <!-- AdminLTE App -->
    <script src="../../dist/js/adminlte.js"></script>
    <link rel="stylesheet" href="/css/style.css">

    <!-- Initialize DataTables -->
    <script>
        $(document).ready(function () {
            $('#example1').DataTable({
                responsive: true,
                lengthChange: false,
                autoWidth: false,
                buttons: ['copy', 'csv', 'excel', 'pdf', 'print', 'colvis'],
                language: {
                    search: "Search:",
                    paginate: {
                        previous: "Previous",
                        next: "Next"
                    }
                }
            }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');
        });
    </script>

<script>
function populateSelect(url, selectId, isArray) {
    fetch(url)
        .then(response => response.json())
        .then(data => {
            const select = document.getElementById(selectId);
            select.innerHTML = '<option value="">Select</option>'; // Default option
            
            // Populate distinct roles or strings
            if (isArray) {
                data.forEach(item => {
                    const option = document.createElement('option');
                    option.value = item; // Use the string directly as the value
                    option.textContent = item; // Display the string
                    select.appendChild(option);
                });
            } else {
                // Populate roles
                data.distinctRoles.forEach(item => {
                    const option = document.createElement('option');
                    option.value = item.role_id; // Use role_id as the value
                    option.textContent = item.Rname; // Display the role name
                    select.appendChild(option);
                });

                // Add a separator for clarity
                const separatorOption = document.createElement('option');
                separatorOption.disabled = true;
                separatorOption.textContent = 'All Roles';
                select.appendChild(separatorOption);

                // Populate all roles
                data.allRoles.forEach(item => {
                    const option = document.createElement('option');
                    option.value = item.role_id; // Use role_id as the value
                    option.textContent = item.Rname; // Display the role name
                    select.appendChild(option);
                });
            }
        })
        .catch(error => console.error(`Error fetching data from ${url}:`, error));
}

// Populate the gender, department, and employee role select dropdowns
populateSelect('/gender-select', 'gender', true); // true because it's an array of strings
populateSelect('/department-select', 'department', true); // true because it's an array of strings
</script>

<script>
    function openEditModal(empId) {
        fetch(`/employees/edit/${empId}`)
            .then(response => response.json())
            .then(data => {
                // Populate employee fields
                document.getElementById('empCode').value = data.empCode;
                document.getElementById('fname').value = data.fname;
                document.getElementById('lname').value = data.lname;
                document.getElementById('fathername').value = data.fathername;
                document.getElementById('mothername').value = data.mothername;
                document.getElementById('gender').value = data.gender;
                document.getElementById('email').value = data.email;
                document.getElementById('dob').value = data.dob;
                document.getElementById('doj').value = data.doj;
                document.getElementById('role_id').value = data.role_id;
                document.getElementById('department').value = data.department;
                document.getElementById('status').value = data.status;

                // Populate family details
                const familyContainer = document.getElementById('familyDetailsContainer');
                familyContainer.innerHTML = ''; // Clear previous entries

                if (data.family && data.family.length > 0) {
                    data.family.forEach((member, index) => {
                        const familyHtml = `
                            <div class="form-row family-member mb-3">
                                <input type="hidden" name="familyId[]" value="${member.id}" required>
                                <div class="col">
                                    <label for="famName${index}">Name</label>
                                    <input type="text" name="famName[]" class="form-control" id="famName${index}" value="${member.name}" required>
                                </div>
                                <div class="col">
                                    <label for="famRelation${index}">Relationship</label>
                                    <select name="famRelation[]" class="form-control" id="famRelation${index}" required>
                                        <option value="" disabled ${!member.relationship ? 'selected' : ''}>Select Relationship</option>
                                        <option value="grandparent" ${member.relationship === 'grandparent' ? 'selected' : ''}>Grandparent</option>
                                        <option value="father" ${member.relationship === 'father' ? 'selected' : ''}>Father</option>
                                        <option value="mother" ${member.relationship === 'mother' ? 'selected' : ''}>Mother</option>
                                        <option value="siblings" ${member.relationship === 'siblings' ? 'selected' : ''}>Siblings</option>
                                    </select>
                                </div>
                                <div class="col">
                                    <label for="famAge${index}">Age</label>
                                    <input type="number" name="famAge[]" class="form-control" id="famAge${index}" value="${member.age}" required>
                                </div>
                                <div class="col">
                                    <label for="famOccupation${index}">Occupation</label>
                                    <input type="text" name="famOccupation[]" class="form-control" id="famOccupation${index}" value="${member.occupation}" required>
                                </div>
                            </div>
                        `;
                        familyContainer.innerHTML += familyHtml;
                    });
                } else {
                    familyContainer.innerHTML = '<p class="bg-danger p-2">No family data found.</p>'; // Show message if no family details
                }

                // Set form action for update
                document.getElementById('editEmployeeForm').action = `/employees/edit/${empId}`;

                // Show the modal
                $('#editEmployeeModal').modal('show');

                // Show current photo if available
                const imagePreview = document.getElementById('imagePreview');
                if (data.photo) {
                    imagePreview.src = '/' + data.photo;
                    imagePreview.style.display = 'block';
                } else {
                    imagePreview.style.display = 'none';
                }
            })
            .catch(error => {
                console.error('Error fetching employee data:', error);
            });
    }

    document.getElementById('editEmployeeForm').onsubmit = function(event) {
        event.preventDefault(); // Prevent the default form submission

        const formData = new FormData(this); // Gather all form data

        fetch(this.action, {
            method: 'POST',
            body: formData
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok: ' + response.statusText);
            }
            return response.json();
        })
        .then(data => {
            console.log("Update response:", data);
            $('#editEmployeeModal').modal('hide');
            location.reload(); // Reload to see updates
        })
        .catch(error => {
            console.error('Error updating employee data:', error);
        });
    };
</script>


    </body>
</html>
